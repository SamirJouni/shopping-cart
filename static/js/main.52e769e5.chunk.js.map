{"version":3,"sources":["components/Counter.jsx","components/Counters.jsx","components/Navbar.jsx","containers/App.jsx","registerServiceWorker.js","index.js"],"names":["Counter","props","counter","formatCount","getBadgeClasses","onIncrement","onDelete","react_default","a","createElement","className","onClick","Counters","value","counters","onReset","onAdd","Fragment","map","components_Counter","key","id","Navbar","totalCounters","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleIncrement","toConsumableArray","state","index","indexOf","objectSpread","setState","handleDelete","filter","ctr","handleReset","handleAdd","length","push","components_Navbar","components_Counters","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_containers_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.52e769e5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Counter = props => {\r\n\r\n\tconst {counter, formatCount, getBadgeClasses, onIncrement, onDelete} = props;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<span className={getBadgeClasses(counter)}>{formatCount(counter)}</span>\r\n\t\t\t<button onClick={() => onIncrement(counter)} className=\"btn btn-secondary btn-sm\">Increment</button>\r\n\t\t\t<button onClick={() => onDelete(counter)} className=\"btn btn-danger btn-sm m-2\">Delete</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\nimport Counter from \"./Counter\";\r\n\r\nconst Counters = props => {\r\n\tconst formatCount = counter => {\r\n\t\tconst { value } = counter;\r\n\t\treturn value === 0 ? \"Zero\" : value;\r\n\t};\r\n\r\n\tconst getBadgeClasses = counter => {\r\n\t\tlet classes = \"badge m-2 badge-\";\r\n\t\tconst { value } = counter;\r\n\t\treturn (classes += value === 0 ? \"warning\" : \"primary\");\r\n\t};\r\n\r\n\tconst {counters, onIncrement, onDelete, onReset, onAdd} = props;\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<button onClick={onReset} className=\"btn btn-primary btn-sm m-2 mr-5\">Reset</button>\r\n\t\t\t<button onClick={onAdd} className=\"btn btn-success btn-sm ml-5\">Add</button>\r\n\t\t\t{counters.map(counter => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Counter\r\n\t\t\t\t\t\tkey={counter.id}\r\n\t\t\t\t\t\tcounter={counter}\r\n\t\t\t\t\t\tformatCount={formatCount}\r\n\t\t\t\t\t\tgetBadgeClasses={getBadgeClasses}\r\n\t\t\t\t\t\tonIncrement={onIncrement}\r\n\t\t\t\t\t\tonDelete={onDelete}\r\n\t\t\t\t\t/>\r\n\t\t\t);\r\n\t\t})}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default Counters;\r\n","import React from \"react\";\r\n\r\nconst Navbar = (props) => {\r\n\treturn (\r\n\t\t<nav className=\"navbar navbar-light bg-light\">\r\n\t\t\t<span className=\"navbar-brand\">\r\n\t\t\t\tTOTAL : <span className=\"badge badge-pill badge-secondary ml-2\">{props.totalCounters}</span>\r\n\t\t\t</span>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport Counters from \"../components/Counters\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tcounters: [\r\n\t\t\t\t{ value: 0, id: 0},\r\n\t\t\t\t{ value: 0, id: 1 },\r\n\t\t\t\t{ value: 0, id: 2 },\r\n\t\t\t\t{ value: 3, id: 3 },\r\n\t\t\t]\r\n\t\t};\r\n\t}\r\n\r\n\thandleIncrement = counter => {\r\n\t\tconst counters = [...this.state.counters];\r\n\t\tconst index = counters.indexOf(counter);\r\n\t\tcounters[index] = {...counter};\r\n\t\tcounters[index].value++;\r\n\t\tthis.setState({counters});\r\n\t};\r\n\r\n\thandleDelete = counter => {\r\n\t\tconst counters = this.state.counters.filter(ctr => ctr.id !== counter.id);\r\n\t\tthis.setState({counters});\r\n\t};\r\n\r\n\thandleReset = () => {\r\n\t\tconst counters = this.state.counters.map ((counter) => {\r\n\t\t\tcounter.value = 0;\r\n\t\t\treturn counter;\r\n\t\t});\r\n\t\tthis.setState({counters});\r\n\t};\r\n\r\n\thandleAdd = () => {\r\n\t\tconst id = this.state.counters.length;\r\n\t\tconst counters =[...this.state.counters];\r\n\t\tcounters.push({value:0, id: id},);\r\n\t\tthis.setState({counters});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Navbar totalCounters={this.state.counters.filter(counter => counter.value > 0).length}/>\r\n\t\t\t\t<main className=\"m-4\">\r\n\t\t\t\t\t<Counters\r\n\t\t\t\t\t\tcounters={this.state.counters}\r\n\t\t\t\t\t\tonIncrement={this.handleIncrement}\r\n\t\t\t\t\t\tonDelete={this.handleDelete}\r\n\t\t\t\t\t\tonReset={this.handleReset}\r\n\t\t\t\t\t\tonAdd={this.handleAdd}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</main>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();"],"sourceRoot":""}